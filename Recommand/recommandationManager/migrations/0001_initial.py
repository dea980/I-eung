# Generated by Django 4.2 on 2025-01-09 09:54

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('articles', '0002_cookingtool_ingredient_recipe_recipeingredient_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='UserRecipeInteraction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('interaction_type', models.CharField(choices=[('view', '조회'), ('save', '저장'), ('cook', '요리완료'), ('rate', '평가')], max_length=10)),
                ('rating', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_interactions', to='articles.recipe')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recipe_interactions', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserPreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dietary_restriction', models.CharField(choices=[('none', '제한 없음'), ('vegetarian', '채식주의'), ('vegan', '비건'), ('pescatarian', '페스코'), ('gluten_free', '글루텐프리'), ('dairy_free', '유제품 제외')], default='none', max_length=20)),
                ('max_cooking_time', models.PositiveIntegerField(blank=True, help_text='선호하는 최대 조리 시간(분)', null=True)),
                ('preferred_difficulty', models.CharField(choices=[('beginner', '초보자'), ('intermediate', '중급자'), ('advanced', '고급자')], default='beginner', max_length=20)),
                ('allergies', models.TextField(blank=True, help_text='콤마로 구분된 알레르기 목록')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('favorite_categories', models.ManyToManyField(blank=True, related_name='preferred_by_users', to='articles.category')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='preferences', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RecommendationHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.FloatField(help_text='추천 점수')),
                ('reason', models.CharField(help_text='추천 이유', max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('interacted', models.BooleanField(default=False, help_text='사용자가 추천에 반응했는지 여부')),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recommendation_history', to='articles.recipe')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recommendation_history', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RecipeSimilarity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('similarity_score', models.FloatField(help_text='레시피 간 유사도 점수 (0-1)')),
                ('recipe1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='similar_to', to='articles.recipe')),
                ('recipe2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='similar_from', to='articles.recipe')),
            ],
        ),
        migrations.AddIndex(
            model_name='userrecipeinteraction',
            index=models.Index(fields=['user', 'interaction_type'], name='recommandat_user_id_76925e_idx'),
        ),
        migrations.AddIndex(
            model_name='userrecipeinteraction',
            index=models.Index(fields=['recipe', 'interaction_type'], name='recommandat_recipe__981994_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='userrecipeinteraction',
            unique_together={('user', 'recipe', 'interaction_type')},
        ),
        migrations.AddIndex(
            model_name='recommendationhistory',
            index=models.Index(fields=['user', 'created_at'], name='recommandat_user_id_a6ca99_idx'),
        ),
        migrations.AddIndex(
            model_name='recommendationhistory',
            index=models.Index(fields=['user', 'interacted'], name='recommandat_user_id_44f4d1_idx'),
        ),
        migrations.AddIndex(
            model_name='recipesimilarity',
            index=models.Index(fields=['recipe1', 'similarity_score'], name='recommandat_recipe1_194ac4_idx'),
        ),
        migrations.AddIndex(
            model_name='recipesimilarity',
            index=models.Index(fields=['recipe2', 'similarity_score'], name='recommandat_recipe2_673110_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='recipesimilarity',
            unique_together={('recipe1', 'recipe2')},
        ),
    ]
