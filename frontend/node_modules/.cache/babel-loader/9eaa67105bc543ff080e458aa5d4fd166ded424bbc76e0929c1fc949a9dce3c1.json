{"ast":null,"code":"var _jsxFileName = \"/Users/daeyeop/Desktop/I-eung/frontend/src/contexts/AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport function AuthProvider({\n  children\n}) {\n  _s();\n  const [user, setUser] = useState(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    // 로컬 스토리지에서 사용자 정보 확인\n    const storedUser = localStorage.getItem('user');\n    if (storedUser) {\n      setUser(JSON.parse(storedUser));\n    }\n  }, []);\n  const login = async (email, password) => {\n    try {\n      // API 호출 로직 구현 필요\n      const response = await fetch('/api/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      if (!response.ok) {\n        throw new Error('로그인 실패');\n      }\n      const userData = await response.json();\n      setUser(userData);\n      localStorage.setItem('user', JSON.stringify(userData));\n      navigate('/');\n    } catch (error) {\n      console.error('로그인 에러:', error);\n      throw error;\n    }\n  };\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('user');\n    navigate('/login');\n  };\n  const loginWithOAuth = provider => {\n    const providers = {\n      google: 'https://accounts.google.com/o/oauth2/v2/auth',\n      naver: 'https://nid.naver.com/oauth2.0/authorize',\n      kakao: 'https://kauth.kakao.com/oauth/authorize',\n      meta: 'https://www.facebook.com/v12.0/dialog/oauth'\n    };\n    const clientIds = {\n      google: process.env.REACT_APP_GOOGLE_CLIENT_ID,\n      naver: process.env.REACT_APP_NAVER_CLIENT_ID,\n      kakao: process.env.REACT_APP_KAKAO_CLIENT_ID,\n      meta: process.env.REACT_APP_META_CLIENT_ID\n    };\n    const redirectUri = `${window.location.origin}/oauth/callback/${provider}`;\n    const scope = 'email profile';\n    const url = new URL(providers[provider]);\n    url.searchParams.append('client_id', clientIds[provider] || '');\n    url.searchParams.append('redirect_uri', redirectUri);\n    url.searchParams.append('response_type', 'code');\n    url.searchParams.append('scope', scope);\n    window.location.href = url.toString();\n  };\n  const handleOAuthCallback = async (provider, code) => {\n    try {\n      const response = await fetch(`/api/oauth/${provider}/callback`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          code\n        })\n      });\n      if (!response.ok) {\n        throw new Error('OAuth 로그인 실패');\n      }\n      const userData = await response.json();\n      setUser(userData);\n      localStorage.setItem('user', JSON.stringify(userData));\n      navigate('/');\n    } catch (error) {\n      console.error('OAuth 로그인 에러:', error);\n      throw error;\n    }\n  };\n  const value = {\n    user,\n    login,\n    loginWithOAuth,\n    handleOAuthCallback,\n    logout,\n    isAuthenticated: !!user\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 10\n  }, this);\n}\n_s(AuthProvider, \"/48TlfV0adSMEvsbW2gk5sMeopI=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nexport function useAuth() {\n  _s2();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n}\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","AuthContext","undefined","AuthProvider","children","_s","user","setUser","navigate","storedUser","localStorage","getItem","JSON","parse","login","email","password","response","fetch","method","headers","body","stringify","ok","Error","userData","json","setItem","error","console","logout","removeItem","loginWithOAuth","provider","providers","google","naver","kakao","meta","clientIds","process","env","REACT_APP_GOOGLE_CLIENT_ID","REACT_APP_NAVER_CLIENT_ID","REACT_APP_KAKAO_CLIENT_ID","REACT_APP_META_CLIENT_ID","redirectUri","window","location","origin","scope","url","URL","searchParams","append","href","toString","handleOAuthCallback","code","value","isAuthenticated","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","$RefreshReg$"],"sources":["/Users/daeyeop/Desktop/I-eung/frontend/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\ninterface User {\n  id: number;\n  name: string;\n  email: string;\n}\n\ninterface AuthContextType {\n  user: User | null;\n  login: (email: string, password: string) => Promise<void>;\n  loginWithOAuth: (provider: string) => void;\n  handleOAuthCallback: (provider: string, code: string) => Promise<void>;\n  logout: () => void;\n  isAuthenticated: boolean;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport function AuthProvider({ children }: { children: React.ReactNode }) {\n  const [user, setUser] = useState<User | null>(null);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    // 로컬 스토리지에서 사용자 정보 확인\n    const storedUser = localStorage.getItem('user');\n    if (storedUser) {\n      setUser(JSON.parse(storedUser));\n    }\n  }, []);\n\n  const login = async (email: string, password: string) => {\n    try {\n      // API 호출 로직 구현 필요\n      const response = await fetch('/api/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ email, password }),\n      });\n\n      if (!response.ok) {\n        throw new Error('로그인 실패');\n      }\n\n      const userData = await response.json();\n      setUser(userData);\n      localStorage.setItem('user', JSON.stringify(userData));\n      navigate('/');\n    } catch (error) {\n      console.error('로그인 에러:', error);\n      throw error;\n    }\n  };\n\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('user');\n    navigate('/login');\n  };\n\n  const loginWithOAuth = (provider: string) => {\n    const providers = {\n      google: 'https://accounts.google.com/o/oauth2/v2/auth',\n      naver: 'https://nid.naver.com/oauth2.0/authorize',\n      kakao: 'https://kauth.kakao.com/oauth/authorize',\n      meta: 'https://www.facebook.com/v12.0/dialog/oauth'\n    };\n\n    const clientIds = {\n      google: process.env.REACT_APP_GOOGLE_CLIENT_ID,\n      naver: process.env.REACT_APP_NAVER_CLIENT_ID,\n      kakao: process.env.REACT_APP_KAKAO_CLIENT_ID,\n      meta: process.env.REACT_APP_META_CLIENT_ID\n    };\n\n    const redirectUri = `${window.location.origin}/oauth/callback/${provider}`;\n    const scope = 'email profile';\n\n    const url = new URL(providers[provider as keyof typeof providers]);\n    url.searchParams.append('client_id', clientIds[provider as keyof typeof clientIds] || '');\n    url.searchParams.append('redirect_uri', redirectUri);\n    url.searchParams.append('response_type', 'code');\n    url.searchParams.append('scope', scope);\n\n    window.location.href = url.toString();\n  };\n\n  const handleOAuthCallback = async (provider: string, code: string) => {\n    try {\n      const response = await fetch(`/api/oauth/${provider}/callback`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ code }),\n      });\n\n      if (!response.ok) {\n        throw new Error('OAuth 로그인 실패');\n      }\n\n      const userData = await response.json();\n      setUser(userData);\n      localStorage.setItem('user', JSON.stringify(userData));\n      navigate('/');\n    } catch (error) {\n      console.error('OAuth 로그인 에러:', error);\n      throw error;\n    }\n  };\n\n  const value = {\n    user,\n    login,\n    loginWithOAuth,\n    handleOAuthCallback,\n    logout,\n    isAuthenticated: !!user,\n  };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n}\n\nexport function useAuth() {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}